{
  "description": "You need to turn on the Holiday Creator Features Experiment on your World Settings.",
  "type": "object",
  "properties": {
    "format_version": {
      "type": "string"
    },
    "minecraft:block": {
      "$ref": "#/definitions/BlocksBase"
    }
  },
  "required": [
    "format_version",
    "minecraft:block"
  ],
  "definitions": {
    "BlocksBase": {
      "type": "object",
      "properties": {
        "description": {
          "$ref": "#/definitions/IBlocksDescription"
        },
        "permutations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IBlocksPermutations"
          }
        },
        "components": {
          "$ref": "#/definitions/IBlocksComponents"
        },
        "events": {
          "$ref": "#/definitions/IBlocksEvents"
        }
      },
      "required": [
        "components",
        "description",
        "events",
        "permutations"
      ]
    },
    "IBlocksDescription": {
      "type": "object",
      "properties": {
        "identifier": {
          "pattern": "^(?:(?:(?!minecraft|minecon))+[a-z]*:[a-z_]*)+$",
          "type": "string"
        },
        "is_experimental": {
          "type": "boolean"
        },
        "register_to_creative_menu": {
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/IProperties"
        }
      },
      "required": [
        "identifier"
      ]
    },
    "IProperties": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "IBlocksPermutations": {
      "type": "object",
      "properties": {
        "components": {
          "$ref": "#/definitions/IBlocksComponents"
        },
        "condition": {
          "description": "Conditions use Minecraft Queries. Read more about at: https://llgava.net/minecraft/queries",
          "type": "string"
        }
      }
    },
    "IBlocksComponents": {
      "type": "object",
      "properties": {
        "minecraft:block_light_absorption": {
          "type": "number"
        },
        "minecraft:block_light_emission": {
          "type": "number"
        },
        "minecraft:breakonpush": {
          "type": "boolean"
        },
        "minecraft:breathability": {
          "enum": [
            "air",
            "solid"
          ],
          "type": "string"
        },
        "minecraft:destroy_time": {
          "type": "number"
        },
        "minecraft:display_name": {
          "type": "string"
        },
        "minecraft:entity_collision": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICollision"
            },
            {
              "enum": [
                false
              ],
              "type": "boolean"
            }
          ]
        },
        "minecraft:explosion_resistance": {
          "type": "number"
        },
        "minecraft:flammable": {
          "$ref": "#/definitions/IFlammable"
        },
        "minecraft:friction": {
          "type": "number"
        },
        "minecraft:geometry": {
          "type": "string"
        },
        "minecraft:immovable": {
          "type": "boolean"
        },
        "minecraft:map_color": {
          "pattern": "^#(?:[0-9a-fA-F]{3}){1,2}$",
          "type": "string"
        },
        "minecraft:material_instances": {
          "$ref": "#/definitions/IMaterialInstances"
        },
        "minecraft:onlypistonpush": {
          "type": "boolean"
        },
        "minecraft:pick_collision": {
          "anyOf": [
            {
              "$ref": "#/definitions/ICollision"
            },
            {
              "enum": [
                false
              ],
              "type": "boolean"
            }
          ]
        },
        "minecraft:placement_filter": {
          "$ref": "#/definitions/IPlacementFilter"
        },
        "minecraft:preventsjumping": {
          "type": "boolean"
        },
        "minecraft:random_ticking": {
          "$ref": "#/definitions/IOnTick"
        },
        "minecraft:rotation": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 3,
          "maxItems": 3
        },
        "minecraft:ticking": {
          "$ref": "#/definitions/ITicking"
        },
        "minecraft:unit_cube": {
          "type": "string"
        },
        "minecraft:unwalkable": {
          "type": "boolean"
        },
        "minecraft:on_fall_on": {
          "$ref": "#/definitions/IOnFallOn"
        },
        "minecraft:on_interact": {
          "$ref": "#/definitions/ITriggerComponent"
        },
        "minecraft:on_placed": {
          "$ref": "#/definitions/ITriggerComponent"
        },
        "minecraft:on_player_destroyed": {
          "$ref": "#/definitions/ITriggerComponent"
        },
        "minecraft:on_player_placing": {
          "$ref": "#/definitions/ITriggerComponent"
        },
        "minecraft:on_step_off": {
          "$ref": "#/definitions/ITriggerComponent"
        },
        "minecraft:on_step_on": {
          "$ref": "#/definitions/ITriggerComponent"
        }
      }
    },
    "ICollision": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 3,
          "maxItems": 3
        },
        "size": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 3,
          "maxItems": 3
        }
      }
    },
    "IFlammable": {
      "type": "object",
      "properties": {
        "burn_odds": {
          "type": "number"
        },
        "flame_odds": {
          "type": "number"
        }
      }
    },
    "IMaterialInstances": {
      "type": "object",
      "properties": {
        "*": {
          "type": "object",
          "properties": {
            "render_method": {
              "enum": [
                "alpha_test",
                "opaque"
              ],
              "type": "string"
            },
            "texture": {
              "type": "string"
            }
          }
        }
      }
    },
    "IPlacementFilter": {
      "type": "object",
      "properties": {
        "allowed_faces": {
          "enum": [
            "all",
            "down",
            "east",
            "north",
            "side",
            "south",
            "up",
            "west"
          ],
          "type": "string"
        },
        "block_filter": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "In development...",
                "enum": [
                  "minecraft:air",
                  "minecraft:grass",
                  "minecraft:stone"
                ],
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "IOnTick": {
      "type": "object",
      "properties": {
        "on_tick": {
          "type": "object",
          "properties": {
            "condition": {
              "type": "string"
            },
            "event": {
              "type": "string"
            },
            "target": {
              "enum": [
                "block",
                "damager",
                "item",
                "other",
                "parent",
                "player",
                "self",
                "target"
              ],
              "type": "string"
            },
            "range": {
              "type": "array",
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          }
        }
      }
    },
    "ITicking": {
      "type": "object",
      "properties": {
        "looping": {
          "type": "boolean"
        },
        "range": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 2,
          "maxItems": 2
        },
        "on_tick": {
          "type": "object",
          "properties": {
            "condition": {
              "type": "string"
            },
            "event": {
              "type": "string"
            },
            "target": {
              "enum": [
                "block",
                "damager",
                "item",
                "other",
                "parent",
                "player",
                "self",
                "target"
              ],
              "type": "string"
            },
            "range": {
              "type": "array",
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          }
        }
      }
    },
    "IOnFallOn": {
      "type": "object",
      "properties": {
        "min_fall_distance": {
          "type": "number"
        },
        "event": {
          "type": "string"
        },
        "condition": {
          "description": "Conditions use Minecraft Queries. Read more about at: https://llgava.net/minecraft/queries",
          "type": "string"
        },
        "target": {
          "enum": [
            "block",
            "damager",
            "item",
            "other",
            "parent",
            "player",
            "self",
            "target"
          ],
          "type": "string"
        }
      },
      "required": [
        "event",
        "min_fall_distance"
      ]
    },
    "ITriggerComponent": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string"
        },
        "condition": {
          "description": "Conditions use Minecraft Queries. Read more about at: https://llgava.net/minecraft/queries",
          "type": "string"
        },
        "target": {
          "enum": [
            "block",
            "damager",
            "item",
            "other",
            "parent",
            "player",
            "self",
            "target"
          ],
          "type": "string"
        }
      },
      "required": [
        "event"
      ]
    },
    "IBlocksEvents": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/IEventsResponse"
      }
    },
    "IEventsResponse": {
      "type": "object",
      "properties": {
        "add_mob_effect": {
          "$ref": "#/definitions/IAddMobEffect"
        },
        "damage": {
          "$ref": "#/definitions/IDamage"
        },
        "decrement_stack": {
          "$ref": "#/definitions/Record<string,unknown>"
        },
        "die": {
          "$ref": "#/definitions/MinecraftTarget"
        },
        "play_effect": {
          "$ref": "#/definitions/IPlayEffect"
        },
        "play_sound": {
          "$ref": "#/definitions/IPlaySound"
        },
        "remove_mob_effect": {
          "$ref": "#/definitions/IRemoveMobEffect"
        },
        "run_command": {
          "$ref": "#/definitions/IRunCommand"
        },
        "set_block": {
          "$ref": "#/definitions/ISetBlock"
        },
        "set_block_at_pos": {
          "$ref": "#/definitions/ISetBlockAtPos"
        },
        "set_block_property": {
          "$ref": "#/definitions/ISetBlockProperty"
        },
        "spawn_loot": {
          "$ref": "#/definitions/ISpawnLoot"
        },
        "swing": {
          "$ref": "#/definitions/Record<string,unknown>"
        },
        "teleport": {
          "$ref": "#/definitions/ITeleport"
        },
        "transform_item": {
          "$ref": "#/definitions/ITransformItem"
        },
        "sequence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IEventsResponse"
          }
        }
      }
    },
    "IAddMobEffect": {
      "type": "object",
      "properties": {
        "amplifier": {
          "type": "number"
        },
        "duration": {
          "type": "number"
        },
        "effect": {
          "type": "string"
        },
        "target": {
          "enum": [
            "block",
            "damager",
            "item",
            "other",
            "parent",
            "player",
            "self",
            "target"
          ],
          "type": "string"
        }
      }
    },
    "IDamage": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "type": {
          "enum": [
            "all"
          ],
          "type": "string"
        },
        "target": {
          "enum": [
            "block",
            "damager",
            "item",
            "other",
            "parent",
            "player",
            "self",
            "target"
          ],
          "type": "string"
        }
      }
    },
    "Record<string,unknown>": {
      "type": "object"
    },
    "MinecraftTarget": {
      "type": "object",
      "properties": {
        "target": {
          "enum": [
            "block",
            "damager",
            "item",
            "other",
            "parent",
            "player",
            "self",
            "target"
          ],
          "type": "string"
        }
      }
    },
    "IPlayEffect": {
      "type": "object",
      "properties": {
        "data": {
          "type": "number"
        },
        "effect": {
          "type": "string"
        },
        "target": {
          "enum": [
            "block",
            "damager",
            "item",
            "other",
            "parent",
            "player",
            "self",
            "target"
          ],
          "type": "string"
        }
      }
    },
    "IPlaySound": {
      "type": "object",
      "properties": {
        "sound": {
          "type": "string"
        },
        "target": {
          "enum": [
            "block",
            "damager",
            "item",
            "other",
            "parent",
            "player",
            "self",
            "target"
          ],
          "type": "string"
        }
      }
    },
    "IRemoveMobEffect": {
      "type": "object",
      "properties": {
        "effect": {
          "type": "string"
        }
      }
    },
    "IRunCommand": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "enum": [
            "block",
            "damager",
            "item",
            "other",
            "parent",
            "player",
            "self",
            "target"
          ],
          "type": "string"
        }
      }
    },
    "ISetBlock": {
      "type": "object",
      "properties": {
        "block_type": {
          "type": "string"
        }
      }
    },
    "ISetBlockAtPos": {
      "type": "object",
      "properties": {
        "block_offset": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 3,
          "maxItems": 3
        },
        "block_type": {
          "type": "string"
        }
      }
    },
    "ISetBlockProperty": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ISpawnLoot": {
      "type": "object",
      "properties": {
        "table": {
          "type": "string"
        }
      }
    },
    "ITeleport": {
      "type": "object",
      "properties": {
        "avoid_water": {
          "type": "boolean"
        },
        "destination": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 3,
          "maxItems": 3
        },
        "land_on_block": {
          "type": "boolean"
        },
        "max_range": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 3,
          "maxItems": 3
        },
        "target": {
          "enum": [
            "block",
            "damager",
            "item",
            "other",
            "parent",
            "player",
            "self",
            "target"
          ],
          "type": "string"
        }
      }
    },
    "ITransformItem": {
      "type": "object",
      "properties": {
        "transform": {
          "type": "string"
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}